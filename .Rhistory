rs_clutch_player
regular_season_player_dataset
rs_clutch_player <- regular_season_player_dataset %>%
select(PLAYER_NAME, PLUS_MINUS, FGM, FGA, FG3M, FG3A, FTM, FTA, GP, W, PTS) %>%
group_by(PLAYER_NAME) %>%
summarise(total_pm = sum(PLUS_MINUS),
total_points = sum(PTS),
total_wins = sum(W),
total_fgm = sum(FGM),
total_fga = sum(FGA),
total_fgpct = sum(FGM)/sum(FGA),
total_fg3pct = sum(`FG3M`)/sum(`FG3A`),
win_pct = sum(W)/sum(GP),
ft_pct = sum(FTM)/sum(FTA)
) %>%
arrange(desc(total_pm), win_pct)
rs_clutch_player
rs_clutch_player <- regular_season_player_dataset %>%
select(PLAYER_NAME, PLUS_MINUS, FGM, FGA, FG3M, FG3A, FTM, FTA, GP, W, PTS) %>%
group_by(PLAYER_NAME) %>%
summarise(total_pm = sum(PLUS_MINUS),
total_wins = sum(W),
total_losses = sum(L),
total_fgm = sum(FGM),
total_fga = sum(FGA),
total_fgpct = sum(FGM)/sum(FGA),
total_fg3pct = sum(`FG3M`)/sum(`FG3A`),
win_pct = sum(W)/sum(GP),
ft_pct = sum(FTM)/sum(FTA)
) %>%
arrange(desc(total_pm), win_pct)
rs_clutch_player <- regular_season_player_dataset %>%
select(PLAYER_NAME, PLUS_MINUS, FGM, FGA, FG3M, FG3A, FTM, FTA, GP, W, PTS) %>%
group_by(PLAYER_NAME) %>%
summarise(total_pm = sum(PLUS_MINUS),
total_wins = sum(W),
total_points = sum(PTS),
total_fgm = sum(FGM),
total_fga = sum(FGA),
total_fgpct = sum(FGM)/sum(FGA),
total_fg3pct = sum(`FG3M`)/sum(`FG3A`),
win_pct = sum(W)/sum(GP),
ft_pct = sum(FTM)/sum(FTA)
) %>%
arrange(desc(total_pm), win_pct)
rs_clutch_player
player_lm <- lm(`win_pct` ~ `total_plus_minus` + `total_points`  data=playoff_performers)
player_lm <- lm(`win_pct` ~ `total_plus_minus` + `total_points`,  data=playoff_performers)
playoff_performers <- playoff_season_player_dataset %>%
select(PLAYER_NAME, PLUS_MINUS, FGM, FGA, FG3M, FG3A, FTM, FTA, GP, W, PTS) %>%
group_by(PLAYER_NAME) %>%
summarise(total_plus_minus = sum(PLUS_MINUS),
total_wins = sum(W),
total_fgm = sum(FGM),
total_fga = sum(FGA),
total_fgpct = sum(FGM)/sum(FGA),
total_fg3pct = sum(`FG3M`)/sum(`FG3A`),
win_pct = sum(W)/sum(GP),
ft_pct = sum(FTM)/sum(FTA)
) %>%
arrange(desc(total_plus_minus), win_pct)
DT::datatable(playoff_performers)
playoff_performers <- playoff_season_player_dataset %>%
select(PLAYER_NAME, PLUS_MINUS, FGM, FGA, FG3M, FG3A, FTM, FTA, GP, W, PTS) %>%
group_by(PLAYER_NAME) %>%
summarise(total_plus_minus = sum(PLUS_MINUS),
total_points = sum(PTS)
total_wins = sum(W),
playoff_performers <- playoff_season_player_dataset %>%
select(PLAYER_NAME, PLUS_MINUS, FGM, FGA, FG3M, FG3A, FTM, FTA, GP, W, PTS) %>%
group_by(PLAYER_NAME) %>%
summarise(total_plus_minus = sum(PLUS_MINUS),
total_points = sum(PTS)
total_wins = sum(W),
knitr::opts_chunk$set(echo = TRUE, message=FALSE, warning=FALSE)
library(tidyverse)
library(hoopR)
# You can install using the pacman package using the following code:
if (!requireNamespace('pacman', quietly = TRUE)){
install.packages('pacman')
}
pacman::p_load_current_gh("sportsdataverse/hoopR", dependencies = TRUE, update = TRUE)
#remote install if necessary
remotes::install_github("saiemgilani/hoopR")
# extract team stat starting from 2001
team_stat_data_01 <- nba_leaguedashteamstats(season = "2001-02", season_type = "Regular Season")
team_stat_data_02 <- nba_leaguedashteamstats(season = "2002-03", season_type = "Regular Season")
team_stat_data_03 <- nba_leaguedashteamstats(season = "2003-04", season_type = "Regular Season")
team_stat_data_04 <- nba_leaguedashteamstats(season = "2004-05", season_type = "Regular Season")
team_stat_data_05 <- nba_leaguedashteamstats(season = "2005-06", season_type = "Regular Season")
team_stat_data_06 <- nba_leaguedashteamstats(season = "2006-07", season_type = "Regular Season")
team_stat_data_07 <- nba_leaguedashteamstats(season = "2007-08", season_type = "Regular Season")
team_stat_data_08 <- nba_leaguedashteamstats(season = "2008-09", season_type = "Regular Season")
team_stat_data_09 <- nba_leaguedashteamstats(season = "2009-10", season_type = "Regular Season")
team_stat_data_10 <- nba_leaguedashteamstats(season = "2010-11", season_type = "Regular Season")
team_stat_data_11 <- nba_leaguedashteamstats(season = "2011-12", season_type = "Regular Season")
team_stat_data_12 <- nba_leaguedashteamstats(season = "2012-13", season_type = "Regular Season")
team_stat_data_13 <- nba_leaguedashteamstats(season = "2013-14", season_type = "Regular Season")
team_stat_data_14 <- nba_leaguedashteamstats(season = "2014-15", season_type = "Regular Season")
team_stat_data_15 <- nba_leaguedashteamstats(season = "2015-16", season_type = "Regular Season")
team_stat_data_16 <- nba_leaguedashteamstats(season = "2016-17", season_type = "Regular Season")
team_stat_data_17 <- nba_leaguedashteamstats(season = "2017-18", season_type = "Regular Season")
team_stat_data_18 <- nba_leaguedashteamstats(season = "2018-19", season_type = "Regular Season")
team_stat_data_19 <- nba_leaguedashteamstats(season = "2019-20", season_type = "Regular Season")
team_stat_data_20 <- nba_leaguedashteamstats(season = "2020-21", season_type = "Regular Season")
team_stat_data_21 <- nba_leaguedashteamstats(season = "2021-22", season_type = "Regular Season")
#convert all extracted data into data frames and add a new column
team_stat_data_01 <- team_stat_data_01 %>%
data.frame(check.names =  FALSE) %>%
rename_with(~ gsub("LeagueDashTeamStats.", "",.x, fixed=TRUE)) %>%
add_column(team_season = "2001-02")
team_stat_data_02 <- team_stat_data_02 %>%
data.frame(check.names =  FALSE) %>%
rename_with(~ gsub("LeagueDashTeamStats.", "",.x, fixed=TRUE)) %>%
add_column(team_season = "2002-03")
team_stat_data_03<- team_stat_data_03 %>%
data.frame(check.names =  FALSE) %>%
rename_with(~ gsub("LeagueDashTeamStats.", "",.x, fixed=TRUE)) %>%
add_column(team_season = "2003-04")
team_stat_data_04 <- team_stat_data_04 %>%
data.frame(check.names =  FALSE) %>%
rename_with(~ gsub("LeagueDashTeamStats.", "",.x, fixed=TRUE)) %>%
add_column(team_season = "2004-05")
team_stat_data_05 <- team_stat_data_05 %>%
data.frame(check.names =  FALSE) %>%
rename_with(~ gsub("LeagueDashTeamStats.", "",.x, fixed=TRUE)) %>%
add_column(team_season = "2005-06")
team_stat_data_06 <- team_stat_data_06 %>%
data.frame(check.names =  FALSE) %>%
rename_with(~ gsub("LeagueDashTeamStats.", "",.x, fixed=TRUE)) %>%
add_column(team_season = "2006-07")
team_stat_data_07 <- team_stat_data_07 %>%
data.frame(check.names =  FALSE) %>%
rename_with(~ gsub("LeagueDashTeamStats.", "",.x, fixed=TRUE)) %>%
add_column(team_season = "2007-08")
team_stat_data_08 <- team_stat_data_08 %>%
data.frame(check.names =  FALSE) %>%
rename_with(~ gsub("LeagueDashTeamStats.", "",.x, fixed=TRUE)) %>%
add_column(team_season = "2008-09")
team_stat_data_09 <- team_stat_data_09 %>%
data.frame(check.names =  FALSE) %>%
rename_with(~ gsub("LeagueDashTeamStats.", "",.x, fixed=TRUE)) %>%
add_column(team_season = "2009-10")
team_stat_data_10 <- team_stat_data_10 %>%
data.frame(check.names =  FALSE) %>%
rename_with(~ gsub("LeagueDashTeamStats.", "",.x, fixed=TRUE)) %>%
add_column(team_season = "2010-11")
team_stat_data_11 <- team_stat_data_11 %>%
data.frame(check.names =  FALSE) %>%
rename_with(~ gsub("LeagueDashTeamStats.", "",.x, fixed=TRUE)) %>%
add_column(team_season = "2011-12")
team_stat_data_12 <- team_stat_data_12 %>%
data.frame(check.names =  FALSE) %>%
rename_with(~ gsub("LeagueDashTeamStats.", "",.x, fixed=TRUE)) %>%
add_column(team_season = "2012-13")
team_stat_data_13 <- team_stat_data_13 %>%
data.frame(check.names =  FALSE) %>%
rename_with(~ gsub("LeagueDashTeamStats.", "",.x, fixed=TRUE)) %>%
add_column(team_season = "2013-14")
team_stat_data_14 <- team_stat_data_14 %>%
data.frame(check.names =  FALSE) %>%
rename_with(~ gsub("LeagueDashTeamStats.", "",.x, fixed=TRUE)) %>%
add_column(team_season = "2014-15")
team_stat_data_15 <- team_stat_data_15 %>%
data.frame(check.names =  FALSE) %>%
rename_with(~ gsub("LeagueDashTeamStats.", "",.x, fixed=TRUE)) %>%
add_column(team_season = "2015-16")
team_stat_data_16 <- team_stat_data_16 %>%
data.frame(check.names =  FALSE) %>%
rename_with(~ gsub("LeagueDashTeamStats.", "",.x, fixed=TRUE)) %>%
add_column(team_season = "2016-17")
team_stat_data_17 <- team_stat_data_17 %>%
data.frame(check.names =  FALSE) %>%
rename_with(~ gsub("LeagueDashTeamStats.", "",.x, fixed=TRUE)) %>%
add_column(team_season = "2017-18")
team_stat_data_18 <- team_stat_data_18 %>%
data.frame(check.names =  FALSE) %>%
rename_with(~ gsub("LeagueDashTeamStats.", "",.x, fixed=TRUE)) %>%
add_column(team_season = "2018-19")
team_stat_data_19 <- team_stat_data_19 %>%
data.frame(check.names =  FALSE) %>%
rename_with(~ gsub("LeagueDashTeamStats.", "",.x, fixed=TRUE)) %>%
add_column(team_season = "2019-20")
team_stat_data_20 <- team_stat_data_20 %>%
data.frame(check.names =  FALSE) %>%
rename_with(~ gsub("LeagueDashTeamStats.", "",.x, fixed=TRUE)) %>%
add_column(team_season = "2020-21")
team_stat_data_21 <- team_stat_data_21 %>%
data.frame(check.names =  FALSE) %>%
rename_with(~ gsub("LeagueDashTeamStats.", "",.x, fixed=TRUE)) %>%
add_column(team_season = "2021-22")
#merge all seasons into one data frame
nba_historical_teamstat_list <- list(team_stat_data_01, team_stat_data_02, team_stat_data_03, team_stat_data_04, team_stat_data_05, team_stat_data_06, team_stat_data_07, team_stat_data_08, team_stat_data_09, team_stat_data_10, team_stat_data_11, team_stat_data_12, team_stat_data_13, team_stat_data_14, team_stat_data_15, team_stat_data_16, team_stat_data_17, team_stat_data_18, team_stat_data_19, team_stat_data_20, team_stat_data_21)
nba_historical_team_data <- Reduce(
function(x,y, ...) merge(x,y, all=TRUE, ...), nba_historical_teamstat_list)
DT::datatable(nba_historical_team_data)
# extract clutch stat from regular season starting from 2001
tc_data_01 <- nba_leaguedashteamclutch(season = "2001-02", season_type = "Regular Season")
knitr::opts_chunk$set(echo = TRUE, message=FALSE, warning=FALSE)
library(tidyverse)
library(hoopR)
# You can install using the pacman package using the following code:
if (!requireNamespace('pacman', quietly = TRUE)){
install.packages('pacman')
}
pacman::p_load_current_gh("sportsdataverse/hoopR", dependencies = TRUE, update = TRUE)
#remote install if necessary
remotes::install_github("saiemgilani/hoopR")
# extract team stat starting from 2001
team_stat_data_01 <- nba_leaguedashteamstats(season = "2001-02", season_type = "Regular Season")
knitr::opts_chunk$set(echo = TRUE, message=FALSE, warning=FALSE)
library(tidyverse)
library(hoopR)
# You can install using the pacman package using the following code:
if (!requireNamespace('pacman', quietly = TRUE)){
install.packages('pacman')
}
pacman::p_load_current_gh("sportsdataverse/hoopR", dependencies = TRUE, update = TRUE)
#remote install if necessary
remotes::install_github("saiemgilani/hoopR")
# extract team stat starting from 2001
team_stat_data_01 <- nba_leaguedashteamstats(season = "2001-02", season_type = "Regular Season")
knitr::opts_chunk$set(echo = TRUE, message=FALSE, warning=FALSE)
library(tidyverse)
library(hoopR)
# You can install using the pacman package using the following code:
if (!requireNamespace('pacman', quietly = TRUE)){
install.packages('pacman')
}
pacman::p_load_current_gh("sportsdataverse/hoopR", dependencies = TRUE, update = TRUE)
#remote install if necessary
remotes::install_github("saiemgilani/hoopR")
# extract team stat starting from 2001
team_stat_data_01 <- nba_leaguedashteamstats(season = "2001-02", season_type = "Regular Season")
team_stat_data_01 <- nba_leaguedashteamstats(season = "2001-02", season_type = "Regular Season")
knitr::opts_chunk$set(echo = TRUE, message=FALSE, warning=FALSE)
library(tidyverse)
library(hoopR)
# You can install using the pacman package using the following code:
if (!requireNamespace('pacman', quietly = TRUE)){
install.packages('pacman')
}
pacman::p_load_current_gh("sportsdataverse/hoopR", dependencies = TRUE, update = TRUE)
#remote install if necessary
remotes::install_github("saiemgilani/hoopR")
# extract team stat starting from 2001
team_stat_data_01 <- nba_leaguedashteamstats(season = "2001-02", season_type = "Regular Season")
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(nbastatR)
library(hoopR)
library(ggfortify)
library(DT)
new_team_csv <- read.csv("https://raw.githubusercontent.com/moham6839/Data607_Final_Project/master/Team_Clutch_Data.csv")
head(new_team_csv)
# split the dataset into regular season and playoff seasons
regular_season_dataset <- new_team_csv %>%
filter(Season_Type == "Regular Season")
playoff_season_dataset <- new_team_csv %>%
filter(Season_Type == "Playoffs")
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(nbastatR)
library(hoopR)
library(ggfortify)
library(DT)
new_team_csv <- read.csv("https://raw.githubusercontent.com/moham6839/Data607_Final_Project/master/Team_Clutch_Data.csv")
head(new_team_csv)
BPF <- 0.96*(new_team_csv$FGA)+(new_team_csv$TOV) + 0.44*(new_team_csv$FTA)-new_team_csv$OREB
new_team_csv <- new_team_csv %>%
mutate(team_possession = 0.96*(new_team_csv$FGA)+(new_team_csv$TOV) + 0.44*(new_team_csv$FTA)-new_team_csv$OREB) %>%
mutate(team_off = 100*(new_team_csv$PTS/new_team_csv$team_possession))
# split the dataset into regular season and playoff seasons
regular_season_dataset <- new_team_csv %>%
filter(Season_Type == "Regular Season")
playoff_season_dataset <- new_team_csv %>%
filter(Season_Type == "Playoffs")
regular_season_dataset %>%
ggplot(aes(x=`W`)) +
geom_histogram(bins = 10) +
labs(title="Amount of WinShares for Each Player",
x="Number of WinShares",
y="Count")
playoff_season_dataset %>%
ggplot(aes(x=`W`)) +
geom_histogram(bins = 10) +
labs(title="Amount of Win for Each Player",
x="Number of Wins",
y="Count")
# team_possession, team_off
new_df <- regular_season_dataset %>%
select(W, PLUS_MINUS, PTS, AST, FGM, FG3M, FTM, REB, TOV)
cor(new_df)
team_rs_clutch <- regular_season_dataset %>%
select(TEAM_NAME, PLUS_MINUS, FGM, FGA, FG3M, FG3A, FTM, FTA, GP, W) %>%
group_by(TEAM_NAME) %>%
summarise(total_pm = sum(PLUS_MINUS),
total_fgpct = sum(FGM)/sum(FGA),
total_fg3pct = sum(`FG3M`)/sum(`FG3A`),
win_pct = sum(W)/sum(GP),
ft_pct = sum(FTM)/sum(FTA)
) %>%
arrange(desc(win_pct), total_pm)
ggplot(data=team_rs_clutch, aes(x=reorder(TEAM_NAME, -win_pct), y=win_pct, fill=total_pm)) +
geom_bar(stat="identity", position="dodge") +
theme_minimal() +
labs(title="NBA Regular Season Team Clutch Win Percentage",
y="Win Percentage",
x="Team") +
coord_flip()
team_playoff_clutch <- playoff_season_dataset %>%
select(TEAM_NAME, PLUS_MINUS, FGM, FGA, FG3M, FG3A, FTM, FTA, GP, W) %>%
group_by(TEAM_NAME) %>%
summarise(total_pm = sum(PLUS_MINUS),
total_fgpct = sum(FGM)/sum(FGA),
total_fg3pct = sum(`FG3M`)/sum(`FG3A`),
win_pct = sum(W)/sum(GP),
ft_pct = sum(FTM)/sum(FTA)
) %>%
filter(win_pct < 0.8) %>%
arrange(desc(total_pm), win_pct)
team_playoff_clutch
ggplot(data=team_playoff_clutch, aes(x=reorder(TEAM_NAME, -win_pct), y=win_pct, fill=total_pm)) +
geom_bar(stat="identity", position="dodge") +theme_minimal() +
labs(title="NBA Playoff Team Clutch Win Percentage",
y="Win Percentage",
x="Team") +
coord_flip()
new_player_csv <- read.csv("https://raw.githubusercontent.com/moham6839/Data607_Final_Project/master/Player_Clutch_Data.csv")
head(new_player_csv)
regular_season_player_dataset <- new_player_csv %>%
filter(Season_Type == "Regular Season")
new_player_csv <- read.csv("https://raw.githubusercontent.com/moham6839/Data607_Final_Project/master/Player_Clutch_Data.csv")
head(new_player_csv)
regular_season_player_dataset <- new_player_csv %>%
filter(Season_Type == "Regular Season")
new_team_csv <- read.csv("https://raw.githubusercontent.com/moham6839/Data607_Final_Project/master/Team_Clutch_Data.csv")
head(new_team_csv)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(nbastatR)
library(hoopR)
library(ggfortify)
library(DT)
new_team_csv <- read.csv("https://raw.githubusercontent.com/moham6839/Data607_Final_Project/master/Team_Clutch_Data.csv")
head(new_team_csv)
new_player_csv <- read.csv("https://raw.githubusercontent.com/moham6839/Data607_Final_Project/master/Player_Clutch_Data.csv")
head(new_player_csv)
BPF <- 0.96*(new_team_csv$FGA)+(new_team_csv$TOV) + 0.44*(new_team_csv$FTA)-new_team_csv$OREB
new_team_csv <- new_team_csv %>%
mutate(team_possession = 0.96*(new_team_csv$FGA)+(new_team_csv$TOV) + 0.44*(new_team_csv$FTA)-new_team_csv$OREB) %>%
mutate(team_off = 100*(new_team_csv$PTS/new_team_csv$team_possession))
# split the dataset into regular season and playoff seasons
regular_season_dataset <- new_team_csv %>%
filter(Season_Type == "Regular Season")
playoff_season_dataset <- new_team_csv %>%
filter(Season_Type == "Playoffs")
regular_season_dataset %>%
ggplot(aes(x=`W`)) +
geom_histogram(bins = 10) +
labs(title="Amount of WinShares for Each Player",
x="Number of WinShares",
y="Count")
# team_possession, team_off
new_df <- regular_season_dataset %>%
select(W, PLUS_MINUS, PTS, AST, FGM, FG3M, FTM, REB, TOV)
cor(new_df)
team_rs_clutch <- regular_season_dataset %>%
select(TEAM_NAME, PLUS_MINUS, FGM, FGA, FG3M, FG3A, FTM, FTA, GP, W) %>%
group_by(TEAM_NAME) %>%
summarise(total_pm = sum(PLUS_MINUS),
total_fgpct = sum(FGM)/sum(FGA),
total_fg3pct = sum(`FG3M`)/sum(`FG3A`),
win_pct = sum(W)/sum(GP),
ft_pct = sum(FTM)/sum(FTA)
) %>%
arrange(desc(win_pct), total_pm)
ggplot(data=team_rs_clutch, aes(x=reorder(TEAM_NAME, -win_pct), y=win_pct, fill=total_pm)) +
geom_bar(stat="identity", position="dodge") +
theme_minimal() +
labs(title="NBA Regular Season Team Clutch Win Percentage",
y="Win Percentage",
x="Team") +
coord_flip()
team_playoff_clutch <- playoff_season_dataset %>%
select(TEAM_NAME, PLUS_MINUS, FGM, FGA, FG3M, FG3A, FTM, FTA, GP, W) %>%
group_by(TEAM_NAME) %>%
summarise(total_pm = sum(PLUS_MINUS),
total_fgpct = sum(FGM)/sum(FGA),
total_fg3pct = sum(`FG3M`)/sum(`FG3A`),
win_pct = sum(W)/sum(GP),
ft_pct = sum(FTM)/sum(FTA)
) %>%
filter(win_pct < 0.8) %>%
arrange(desc(total_pm), win_pct)
team_playoff_clutch
ggplot(data=team_playoff_clutch, aes(x=reorder(TEAM_NAME, -win_pct), y=win_pct, fill=total_pm)) +
geom_bar(stat="identity", position="dodge") +theme_minimal() +
labs(title="NBA Playoff Team Clutch Win Percentage",
y="Win Percentage",
x="Team") +
coord_flip()
new_player_csv <- read.csv("https://raw.githubusercontent.com/moham6839/Data607_Final_Project/master/Player_Clutch_Data.csv")
head(new_player_csv)
regular_season_player_dataset <- new_player_csv %>%
filter(Season_Type == "Regular Season")
regular_season_player_dataset
rs_clutch_player <- regular_season_player_dataset %>%
select(PLAYER_NAME, PLUS_MINUS, FGM, FGA, FG3M, FG3A, FTM, FTA, GP, W, PTS) %>%
group_by(PLAYER_NAME) %>%
summarise(total_pm = sum(PLUS_MINUS),
total_points = sum(PTS),
total_wins = sum(W),
total_fgm = sum(FGM),
total_fga = sum(FGA),
total_fgpct = sum(FGM)/sum(FGA),
total_fg3pct = sum(`FG3M`)/sum(`FG3A`),
win_pct = sum(W)/sum(GP),
ft_pct = sum(FTM)/sum(FTA)
) %>%
arrange(desc(total_pm), win_pct)
rs_clutch_player
rs_clutch_player <- regular_season_player_dataset %>%
select(PLAYER_NAME, PLUS_MINUS, FGM, FGA, FG3M, FG3A, FTM, FTA, GP, W, PTS) %>%
group_by(PLAYER_NAME) %>%
summarise(total_pm = sum(PLUS_MINUS),
total_wins = sum(W),
total_points = sum(PTS),
total_fgm = sum(FGM),
total_fga = sum(FGA),
total_fgpct = sum(FGM)/sum(FGA),
total_fg3pct = sum(`FG3M`)/sum(`FG3A`),
win_pct = sum(W)/sum(GP),
ft_pct = sum(FTM)/sum(FTA)
) %>%
arrange(desc(total_pm), win_pct)
rs_clutch_player
ggplot(data=rs_clutch_player[1:20, ], aes(x=reorder(PLAYER_NAME, -total_pm), y=total_pm)) +
geom_bar(stat="identity", position="dodge") +
theme_minimal() +
labs(title="NBA Regular Season Player Clutch Plus/Minus",
y="Total Plus/Minus",
x="Player") +
coord_flip()
ggplot(data=rs_clutch_player[1:20, ], aes(x=reorder(PLAYER_NAME, -win_pct), y=win_pct)) +
geom_bar(stat="identity", position="dodge") +
theme_minimal() +
labs(title="NBA Regular Season Player Clutch Win Percentage",
y="Win Percentage",
x="Player") +
coord_flip()
ggplot(data=rs_clutch_player[1:20, ], aes(x=reorder(PLAYER_NAME, -total_wins), y=total_wins)) +
geom_bar(stat="identity", position="dodge") +
coord_flip()
playoff_season_player_dataset <- new_player_csv %>%
filter(Season_Type == "Playoffs")
playoff_performers <- playoff_season_player_dataset %>%
select(PLAYER_NAME, PLUS_MINUS, FGM, FGA, FG3M, FG3A, FTM, FTA, GP, W, PTS) %>%
group_by(PLAYER_NAME) %>%
summarise(total_plus_minus = sum(PLUS_MINUS),
total_points = sum(PTS)
total_wins = sum(W),
playoff_performers <- playoff_season_player_dataset %>%
select(PLAYER_NAME, PLUS_MINUS, FGM, FGA, FG3M, FG3A, FTM, FTA, GP, W, PTS) %>%
group_by(PLAYER_NAME) %>%
summarise(total_plus_minus = sum(PLUS_MINUS),
total_points = sum(PTS),
total_wins = sum(W),
total_fgm = sum(FGM),
total_fga = sum(FGA),
total_fgpct = sum(FGM)/sum(FGA),
total_fg3pct = sum(`FG3M`)/sum(`FG3A`),
win_pct = sum(W)/sum(GP),
ft_pct = sum(FTM)/sum(FTA)
) %>%
arrange(desc(total_plus_minus), win_pct)
DT::datatable(playoff_performers)
ggplot(data=playoff_performers[1:20, ], aes(x=reorder(PLAYER_NAME, -total_plus_minus), y=total_plus_minus)) +
geom_bar(stat="identity", position="dodge") +
theme_minimal() +
labs(title="NBA Playoffs Player Clutch Plus/Minus",
y="Plus/Minus",
x="Player") +
coord_flip()
ggplot(data=playoff_performers[1:20, ], aes(x=reorder(PLAYER_NAME, win_pct), y=win_pct, fill=win_pct)) +
geom_bar(stat="identity", position="dodge") +
coord_flip()
ggplot(data=playoff_performers[1:20, ], aes(x=reorder(PLAYER_NAME, -win_pct), y=win_pct)) +
geom_bar(stat="identity", position="dodge") +
theme_minimal() +
labs(title="NBA Playoffs Player Clutch Win Percentage",
y="Win Percentage",
x="Player") +
coord_flip()
player_lm <- lm(`win_pct` ~ `total_plus_minus` + `total_points`,  data=playoff_performers)
summary(player_lm)
rs_clutch_player <- regular_season_player_dataset %>%
select(PLAYER_NAME, PLUS_MINUS, FGM, FGA, FG3M, FG3A, FTM, FTA, GP, W, PTS, REB) %>%
group_by(PLAYER_NAME) %>%
summarise(total_pm = sum(PLUS_MINUS),
total_points = sum(PTS),
total_rebounds = sum(REB),
total_wins = sum(W),
total_fgm = sum(FGM),
total_fga = sum(FGA),
total_fgpct = sum(FGM)/sum(FGA),
total_fg3pct = sum(`FG3M`)/sum(`FG3A`),
win_pct = sum(W)/sum(GP),
ft_pct = sum(FTM)/sum(FTA)
) %>%
arrange(desc(total_pm), win_pct)
rs_clutch_player
